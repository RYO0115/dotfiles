/** 
 * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
 *
 * KOMATSU "Front Runner" / AHS Embeded Controller Software
 * Copyright (C) 2006 Komatsu Ltd. All rights reserved.
 * 
 *  $RCSfile: ClippingAreaManager.h,v $
 * $Revision: 1.1.1.1 $
 *   $Author: tojima $
 *     $Date: 2005/07/06 06:36:19 $
 *    $State: Exp $
 *
 *    @brief: Safety Controller
 *
 * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*/

#ifndef __CLIPPING_AREA_MANAGER_H__
#define __CLIPPING_AREA_MANAGER_H__

#include "kcommon.h"
#include "ahscommon.h"
#include "Acc3TargetInfo.h"
#include "AppIfdef.h"

#define NUM_ZONE         21      /** 最大21点 1点5m×21=105m、最大105m */
#define NUM_ZONE_VERTEX  4


/**
 *
 */
#define ZONE_UNDEFINED     -1
#define ZONE_MOVE_FORWARD   0
#define ZONE_MOVE_REVERSE   1
#define ZONE_NORMAL_STOP    2
#define ZONE_ACCURATE_STOP  3
#define ZONE_BEFORE_STOP    4

/**
 * クリッピングエリア内外判定結果
 */
#define ZONE_OUT           0    /**< クリッピングエリアの外 */ 
#define ZONE_F_IN          1    /**< 前端定義クリッピングエリア内 */
#define ZONE_R_IN          2    /**< 後輪クリッピングエリア内 */

/**
 * クリッピングエリアタイプ定義
 */
typedef enum{
    zoneNone             = 0,   /**< クリッピングエリアなし */
    zoneAutoRun          = 1,   /**< 自動走行用クリッピングエリア（コースから決まる） */
    zoneInspection       = 2,   /**< 始業点検用 */
    zoneCalibration      = 3,   /**< レーダ向きキャリブレーション用 */
    zoneRangeCalibration = 4,   /**< レーダ距離キャリブレーション用 */
    zoneTest             = 5,   /**< テスト用(クリッピングエリア幅は機種依存) */
    zoneTest2            = 6,   /**< テスト用(クリッピングエリア幅は機種依存)（絶対座標） */
    zoneTest3            = 7,   /**< テスト用(クリッピングエリア幅はtest幅) */
    zoneTest4            = 8,   /**< テスト用(クリッピングエリア幅はtest幅)（絶対座標） */
    zoneTestRear         = 9,   /**< リアセンサテスト用 */
    zoneSrrInspection    = 10,  /**< Short Range Radarの点検用 */
    zoneTestRear2        = 11,  /**< リアセンサ用（絶対座標） */
    zoneRearInspection   = 12,  /**< リアセンサ始業点検、キャリブレーション用 */
    zoneSrrCalibration   = 13,  /**< SRRキャリブレーション用 */
    zoneLuxCalibration   = 14   /**< MMR1Cキャリブレーション用 */
} ZoneType;

/**
 * 初期化
 */
extern void ClippingArea_Init(void);

/**
 * メイン（毎サイクル１回だけ実行すること）
 */
extern void ClippingArea_Main(void);

/**
 * クリッピングエリア内にあるかどうか
 * @param x 調べる点のX座標 [mm]
 * @param y 調べる点のY座標 [mm]
 * @retval ZONE_R_IN エリア内
 * @retval ZONE_F_IN エリア内
 * @retval ZONE_OUT  エリア外
 */
extern sint16 ClippingArea_ZoneContains(sint32 x, sint32 y, sint32 *latpos, sint8 *status);

/**
 * テスト、点検用にダミーのクリッピングエリアをセットする
 * @param クリッピングエリアのタイプ
 */
extern void ClippingArea_SetDummyZone(ZoneType type);

/**
 * @return クリッピングエリアのタイプ
 */
extern ZoneType ClippingArea_GetZoneType(void);

/**
 * クリッピングエリアの内容の取得
 */
extern sint16 ClippingArea_GetAreaNum(void);
extern sint32 ClippingArea_GetXR(sint16 ii);
extern sint32 ClippingArea_GetYR(sint16 ii);
extern sint32 ClippingArea_GetXL(sint16 ii);
extern sint32 ClippingArea_GetYL(sint16 ii);
extern sint32 ClippingArea_GetXR_Rear(sint16 ii);
extern sint32 ClippingArea_GetYR_Rear(sint16 ii);
extern sint32 ClippingArea_GetXL_Rear(sint16 ii);
extern sint32 ClippingArea_GetYL_Rear(sint16 ii);
extern uint32 ClippingArea_GetCourseIndex(sint16 ii);
extern uint32 ClippingArea_GetZoneCenterX1(sint16 ii);
extern uint32 ClippingArea_GetZoneCenterY1(sint16 ii);
extern uint32 ClippingArea_GetZoneCenterX2(sint16 ii);
extern uint32 ClippingArea_GetZoneCenterY2(sint16 ii);
extern uint32 ClippingArea_GetZoneRearCenterX1(sint16 ii);
extern uint32 ClippingArea_GetZoneRearCenterY1(sint16 ii);
extern uint32 ClippingArea_GetZoneRearCenterX2(sint16 ii);
extern uint32 ClippingArea_GetZoneRearCenterY2(sint16 ii);
extern uint8  ClippingArea_GetZoneSegmentType(sint16 ii);

extern sint16 ClippingArea_GetSpeedLimit(void);

/**
 * ClippingArea情報をPrintf表示する
 */
extern void ClippingArea_ShowInfo(void);
extern void ClippingArea_UseRearArea(bool flag);

extern void ClippingArea_SetMergin(uint32 value);

extern uint32 ClippineArea_GetEndIndex(void);

/**
 *
 */
extern uint8 ClippingArea_GetZoneWidth(ZoneType type);


#endif ///#ifndef __CLIPPING_AREA_MANAGER_H__

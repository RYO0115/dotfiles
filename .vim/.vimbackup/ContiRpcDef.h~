/**
 * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
 *
 * KOMATSU "Front Runner" / AHS Embeded Controller Software
 * Copyright (C) 2009 Komatsu Ltd. All rights reserved.
 * 
 *    $RCSfile: ContiRpcDef.h,v $
 *    $Revision: 1.1.1.1 $
 *    $Author: tojima $
 *    $Date: 2009/09/15 06:36:19 $
 *    $State: Exp $
 *
 *    @brief: Communication module with LUX
 *
 * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*/

#ifndef ___CONTI_RPCDEF_H___
#define ___CONTI_RPCDEF_H___

#include "kcommon.h"
#include "ContiCommon.h"

typedef union{
	uint8 byte;
	struct{
		uint8 totalFrameNum:4;					//bit 4-7 全体の総フレーム数
		uint8 frameNumber:4;					//bit 0-3 フレーム番号
	}bit;
} FrameListNumber;

//---------------------------------------------------------------------------
/**
 * StatusMsg構造体定義
 * RPC : 0x8C42
 * 4byte
 * 100msec毎に送信
 */
//---------------------------------------------------------------------------
typedef struct{
	uint16 timeStamp;

	union{
		uint16 byte;
		struct{
			uint8  RadarState_NVMReadStatus:1;			// bit 0     RadarState_NVMReadStatus
			uint8  RadarState_NVMWriteStatus:1;			// bit 1     RadarState_NVMWriteStatus
			uint16 RadarState_MaxDistanceCfg:10;		// bit 2-11  RadarState_MaxDistanceCfg
			uint8  RadarState_Persistent_Error:1;		// bit 12    RadarState_Persistent_Error
			uint8  RadarState_Interface:1;				// bit 13    RadarState_Interface
			uint8  RadarState_Temperature_Error:2;		// bit 14-15 RadarState_Temperature_Error
		}bit;
	}Status_Info1;
  
	union{
		uint8  byte;
		struct{
			uint8  RadarState_Temporary_Error:1;		// bit 0     RadarState_Temporary_Error;
			uint8  RadarState_Voltage_Error:1;			// bit 1     RadarState_Voltage_Error;
			uint8  RadarState_SensorID:3;				// bit 2-4   RadarState_SensorID;
			uint8  RadarState_RadarPowerCfg:3;			// bit 5-7    RadarState_RaderPowerCfg;
		} bit;
	}Status_Info2;

	union{
		uint8  byte;
		struct{
			uint8  RadarState_CtrlRelayCfg:2;			// bit 0-1   RadarState_CtrlRelayCfg
			uint8  RadarState_OutputTypeCfg:2;			// bit 2-3   RadarState_OutputTypeCfg
			uint8  RadarState_SendQualityCfg:1;			// bit 4     RadarState_SendQualityCfg
			uint8  RadarState_SendExtInfoCfg:1;			// bit 5	 RadarState_SendExtInfoCfg
			uint8  RadarState_MotionRxState:2;			// bit 6-7   RadarState_MotionRxState
		}bit;
	}Status_Info3;

	union{
		uint8  byte;
		struct{
			uint8  RadarState_RCS_Threshold:3;			// bit 0-2   RadarState_RCS_Threshold
			uint8  CAN_CommStatus:1;					// bit 3     CAN Comm RBI-Radar status
			uint8  reserve:4;							// bit 4-7   reserve
		}bit;
	}Status_Info4;
} StructStatusMsgARS408;

//---------------------------------------------------------------------------
/**
 * ARS408_TRACK_MSG (RBI->Safety)
 * RPC No: 0x8C41
 */
//---------------------------------------------------------------------------
typedef struct{
	uint16 timeStamp;
	uint8  targetNum;        // このパケットに含まれるターゲット数

	FrameListNumber frameListNumber; // FrameList情報
	bool	packetLostFlag;		 /**< Packetロストしたかどうか */
	// bit0-3 frameNumber フレーム番号
    // bit4-7 totalFrameNum 総フレーム数
	
	struct{
		sint16 xpos;   /** [0.2m] AHSトラック座標系で、原点をリアアクスルとして、前方を正 */
		sint16 ypos;
		sint16 vx;     /** [0.25m/s] AHSトラック座標系で、前方を正 */
		sint16 vy;
		sint8  rcs;
		uint8  id;
		uint8  length;
		uint8  width;
		uint32 quality;
    } target[MAX_CONTI_OBJECTS];
} StructTargetMsgARS408;

//---------------------------------------------------------------------------
/**
 * ARS408_RADAR_CFG (Safety->FRBI)
 * RPC No: 0x8C43
 */
//---------------------------------------------------------------------------
typedef struct{
	uint32  statConfig;
	/*
		  RadarCfg_MaxDistance			bit0-bit9
		  RadarCfg_SensorID				bit10-bit12
		  RadarCfg_OutputType			bit13-bit14
		  RadarCfg_RadarPower			bit15-bit17
		  RadarCfg_CtrlRelay_valid		bit18
		  RadarCfg_CtrlRelay			bit19
		  RadarCfg_SendQuality			bit20
		  RadarCfg_SendExtinfo			bit21
		  RadarCfg_SortIndex			bit22-bit24
		  RadarCfg_StorInNVM			bit25
		  RadarCfg_RCS_Threshold_valid	bit26
		  RadarCfg_RCS_Threshold		bit27-bit29
		  reserve						bit30-bit31
	*/
	
	uint8   validFlag;
/*
		  RadarCfg_MaxDistance_valid	bit0
		  RadarCfg_SensorID_valid		bit1
		  RadarCfg_RadarPower_valid		bit2
		  RadarCfg_OutputType_valid		bit3
		  RadarCfg_SendQuality_valid	bit4
		  RadarCfg_SendExtInfo_valid	bit5
		  RadarCfg_SortIndex_valid		bit6
		  RadarCfg_StorInNVM_valid		bit7
*/
} StructRadarCfgARS408;


#endif // ___CONTI_RPCDEF_H___



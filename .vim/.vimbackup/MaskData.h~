/** 
 * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
 *
 * KOMATSU "Front Runner" / AHS Embeded Controller Software
 * Copyright (C) 2005 Komatsu Ltd. All rights reserved.
 * 
 *  $RCSfile: MaskData.h,v $
 * $Revision: 1.1.1.1 $
 *   $Author: tojima $
 *     $Date: 2005/07/06 06:36:19 $
 *    $State: Exp $
 *
 *    @brief: Safety Controller
 *
 * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*/

#ifndef __MASK_DATA_H__
#define __MASK_DATA_H__

#include "kcommon.h"
#include "SfMask.h"

#define MAX_NUM_VERTEX      20      /* Maskで使用できる多角形の頂点数 */

/**
 * MaskDataクラスの属性定義
 */
typedef struct{
    sint16  id;                     /** MaskID*/
    uint16  numVertex;              /** 頂点の数 */
    sint32  x[MAX_NUM_VERTEX];      /** [mm] */
    sint32  y[MAX_NUM_VERTEX];
    sint32  minx;                   /** boundary max [mm] */
    sint32  maxx;
    sint32  miny;
    sint32  maxy;
    MaskType   maskTypeRadar;       /** ACC3レーダ用  */
    MaskType   maskTypeTRadar;      /** 積込場など全体をマスクする場合 */
    MaskType   maskTypeUtil;        /** その他の用途 */
    MaskType   maskTypeREG;         /** REG用 */
    MaskType   maskTypeLux;         /** MMR1C用 */
    MaskType   maskTypeSrrFront;    /** SRR用(Front) */
    MaskType   maskTypeSrrRear;     /** SRR用(Rear) */
    sint8   prior;
} StructMaskData;


/**
 * マスクデータの初期化
 * @param *mask マスクデータオブジェクトのポインタ
 */
extern void MaskData_Init(StructMaskData *mask);

/**
 * マスクセットRPCを受信し、マスクデータにコピーする
 * @param *mask マスクデータオブジェクトのポインタ
 * @param *msg  RPCバッファのポインタ
 * @retval FALSE 
 * @retval TRUE  
 *
 */
extern bool MaskData_Set(StructMaskData *mask, const uint8 *msg);

/**
 * マスクデータの削除
 */
extern bool MaskData_Delete(StructMaskData *mask);


/**
 * 指定された点がマスクの中か外とかどうか
 * @param *mask マスクデータオブジェクトのポインタ
 * @param x [mm]
 * @param y [mm]
 * @retval TRUE マスクエリアの中
 * @retval FALSE マスクエリアの外
 */
extern bool MaskData_IsInside(const StructMaskData *mask, sint32 x, sint32 y);

/**
 * @retval TRUE  マスクバッファの中身が空（使える）
 * @retval FALSE マスクバッファが使用中（使えない）
 */
extern bool MaskData_IsAvailable(const StructMaskData *mask);

#endif ///#ifndef __MASK_DATA_H__

/** 
 * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
 *
 * KOMATSU "Front Runner" / AHS Embeded Controller Software
 * Copyright (C) 2009 Komatsu Ltd. All rights reserved.
 * 
 *    $RCSfile: MacomDataMsg.h,v $
 *    $Revision: 1.1.1.1 $
 *    $Author: tojima $
 *    $Date: 2009/09/15 06:36:19 $
 *    $State: Exp $
 *
 *    @brief: Communication module with LUX
 *
 * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*/
#ifndef __MACOM_RADAR_H__
#define __MACOM_RADAR_H__

#include "kcommon.h"
#include "MacomCommon.h"
#include "MacomSelfDiag.h"

/**
 * TrackDataMsg構造体
 */
typedef struct{
    sint8  numMode;           /**< bit0-3:target num  bit4-7:operation mode */
    sint8  msgCntSnsrNo;      /**< bit0-3:sensor No.  bit4-7:counter*/
    uint16 diagnosis;
    struct{
        sint32  range;  /**< [mm] */
        sint32  speed;  /**< [mm/s] */
        sint32  xpos;   /**< ターゲットのグローバル座標 [mm] */
        sint32  ypos;   /**< ターゲットのグローバル座標 [mm] */
        sint32  localX; /**< ターゲットの座標（後輪座標） [mm] */
        sint32  localY; /**< ターゲットの座標（後輪座標） [mm] */
        sint16  power;  /**< [dB] */
        sint16  angle;  /**< [1/65536] */

    } tracks[MAX_MACOM_OBJECTS];

    sint16  targetNum;
    sint16  msgCounter;   /**< */
    uint8   mode;         /**< MACOMレーダの動作モード */

} StructMacomDataMsg;


/**
 *
 */
typedef struct{
    float32 baseX;               /**< 車両原点からのレーダの位置[mm] */
    float32 baseY;               /**< 車両原点からのレーダの位置[mm] */
    sint16  baseAngle;           /**< 基本取り付け角度オフセット [2pi/65536] */
    
    sint32  radarX;              /**< レーダのグローバル座標 [mm] */
    sint32  radarY;              /**< レーダのグローバル座標 [mm] */
    sint16  radarTheta;          /**< レーダの方位角 [2pi/65536] */

    MacomPosition  pos;          /**< レーダのチャンネル */
    bool           valid;        /**< */
    bool           comValid;     /**< */
    
    bool           updated;      /**< */

    uint16 hw_version;           /**< レーダのハードウェアバージョン*/
    uint16 sw_version;           /**< レーダのソフトウェアバージョン*/
    sint16 VCO_temperature;      /**< VCO温度 [degC]*/
    
    sint16 targetNum;
    uint8  mode;                 /**< MACOMレーダの動作モード */
    bool   healthy;              

    StructMacomDataMsg   packet;  /**< SRBIからのRPC受信バッファ */
    
    StructUserMacomTarget  closestObject;  /**< クリッピングされた物体で最近距離のもの */

    // RPC受信用のダブルバッファ
    StructMacomDataMsg   msg1;    /** RPC受信バッファ１ */
    StructMacomDataMsg   msg2;    /** RPC受信バッファ２ */
    StructMacomDataMsg*  ptrRec;  /** 受信バッファのポインタ */
    StructMacomDataMsg*  ptrUse;  /** 参照用バッファのポインタ */

    StructMacomSelfDiag  selfdiag[NUM_MACOM_ERROR_CODE];
    
    uint16 packetCounter;

} StructMacom;

/**
 * 初期化
 */
extern void MacomRadar_Init(
      StructMacom *pRadar,  /**< */
      MacomPosition pos,    /**< */
      bool flag,            /**< */
      sint16 xpos,          /**< */
      sint16 ypos,          /**< */
      sint16 angle          /**< */
      );

/**
 * メイン
 */
extern void MacomRadar_PreMain(
     StructMacom *pRadar,   /**< レーダオブジェクトのポインタ */
     sint32 truckX,         /**< 車両の位置 [mm] */
     sint32 truckY,         /**< 車両の位置 [mm] */
     sint16 truckDir,       /**< 車両の方位角 [1/65536] */
     float32  cs,           /**< 方位角のCOS成分 */
     float32  sn            /**< 方位角のSIN成分 */
     );

/**
 *
 */
extern void MacomRadar_Main(
     const StructMacom *pRadar    /**< レーダオブジェクトのポインタ */
     );


/**
 *
 */
extern void MacomRadar_PostMain(
     StructMacom *pRadar   /**< レーダオブジェクトのポインタ */
     );


/**
 * TrackDataMsgの受信
 */
extern void MacomRadar_SetTracks(
     StructMacom *pRadar,    /**< レーダオブジェクトのポインタ */
     const uint8 *msg        /**< RPC受信データのポインタ */
     );

/**
 * VersionMsgの受信
 */
extern void MacomRadar_SetVersion(
     StructMacom *pRadar,    /**< レーダオブジェクトのポインタ */
     const uint8 *msg        /**< RPC受信データのポインタ */
     );

/**
 * SRBI-MACOMの通信チェック
 */
extern void MacomRadar_CheckRbiSrrCommunication(
     StructMacom *pRadar
     );

/**
 *
 */
extern void MacomRadar_SelfDiagnosis(
     StructMacom *pRadar
     );

/**
 *
 */
extern void MacomRadar_SelfDiagnosisClear(
     const StructMacom *pRadar
     );

/**
 *
 */
extern void MacomRadar_SetClippedObject(
     StructMacom *pRadar,
     sint32 range,
     sint16 angle,
     sint16 power,
     sint32 xpos,
     sint32 ypos
     );

/**
 *
 */
extern void MacomRadar_SetBaseAngle(
      StructMacom *pRadar, 
      sint16 angle
      );

#endif  //__MACOM_RADAR_H__



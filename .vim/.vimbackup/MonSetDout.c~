/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
 *
 * KOMATSU "Front Runner" / AHS Embeded Controller Software
 * Copyright (C) 2005 Komatsu Ltd. All rights reserved.
 * 
 * $RCSfile: MonSetDout.h,v $
 * $Revision: 1.1.1.1 $
 *	 $Author: tojima $
 *	   $Date: 2005/07/06 06:36:19 $
 *	  $State: Exp $
 *
 *	  @brief: Safety Controller
 *
 * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*/
#include "ahscommon.h"
#include "MonSetDout.h"
#include "AhsTools.h"

#include "Engine.h"
#include "TurnLight.h"
#include "BrakeControl.h"
#include "ModeLamp.h"
#include "HeadLight.h"
#include "Horn.h"
#include "OdsPower.h"
#include "AppIoDefine.h"
#include "SfHeartbeat.h"
#include "EGStart.h"

#include "ModeManager.h"
#include "TruckInfo.h"
#include "LuxPower.h"
#include "AppNvram.h"
#include "AhsAuxDevice.h"

//---------------------------------------------------------------------------
/**
 * DOUTのコントロール用RPCの受信処理
 * E/G停止、ParkingBrake、RestReqは、無条件にコントロールすると危険なので
 * コントロールする条件がある
 */
//---------------------------------------------------------------------------
void MonSetDout_ReceiveCommand( uint8 dest,  /** < RPCの送信元アドレス */
								uint8* buf /** < RPCメッセージのポインタ */
								)
{
	sint8  ch;
	sint8  flag;

	ch   = buf[0];
	flag = buf[3];
	
	switch ( ch )
	{
		case DOUT_TURN_RIGHT :       //SOL_OUT_0
		
			if( flag == ON ) { Turnlight_On( tlRight );  }
			else             { Turnlight_Off( tlRight ); }
			break;
	
		case  DOUT_MMR1C_POWER :       //SOL_OUT_1
		
			if( flag == ON ) { LuxPower_On();  }
			else             { LuxPower_Off(); }
			break;
		
		case DOUT_TURN_LEFT :        //SOL_OUT_2
		
			if( flag == ON ) { Turnlight_On( tlLeft );  }
			else	         { Turnlight_Off( tlLeft ); }
			break;
			
		case DOUT_ENGINE_START :     //SOL_OUT_3
		
			// モニパソからのエンジンの始動はMaintenanceモードのみ
			if( Mode_GetCurrentMode() == modeMaintenance )
			{
				Engine_Start();
			}
			break;
	
		case DOUT_PATOLIGHT_GREEN :  //SOL_OUT_4
		
			ModeLamp_On( clGreen, T_5SEC );
			break;
		
		case DOUT_PATOLIGHT_YELLOW : //SOL_OUT_5
			
			ModeLamp_On( clYellow, T_5SEC );
			break;
		
		case DOUT_PATOLIGHT_RED :    //SOL_OUT_6
		
			ModeLamp_On( clRed, T_5SEC );
			break;
			
		case DOUT_HEADLIGHT :        //SOL_OUT_7
		
			if( flag == ON ) { Headlight_On();  }
			else             { Headlight_Off(); }
			break;
			
		case DOUT_HORN :             //SOL_OUT_8
		
			Horn_Honk( hornWarning );
			break;
			
		case DOUT_HEART_BEAT_TO_DRIVE : //SOL_OUT_9
		
			// モニパソからのHeartbeat操作はMaintenanceモードのみ
			if( Mode_GetCurrentMode() == modeMaintenance )
			{
				if( flag == ON ) { SafetyHeartbeat_Start(); }
				else             { SafetyHeartbeat_Stop(); }
			}
			break;
			
		case DOUT_HEADLIGHT_HI : //SOL_OUT_10

			if( flag == ON ) { Headlight_BeamOn(); }
			else             { Headlight_BeamOff(); }
			break;
			
		case DOUT_RADAR_POWER : //SOL_OUT_11

			if( flag == ON ) { OdsPower_On(); }
			else             { OdsPower_Off(); }
			break;
			
		case 12 : break; //SOL_OUT_12
		case 13 : break; //SOL_OUT_13
		case 14 : break; //SIG_OUT_0
			
		case DOUT_PARKING_BRAKE : //SIG_OUT_1
		
			// ParkingBrakeをかけるのはMaintenanceモードのときのみ
			if( Mode_GetCurrentMode()==modeMaintenance )
			{
				if( flag == ON ){ BrakeControl_ParkingOnByInspection();  }
			    else            { BrakeControl_ParkingOffByInspection(); }
			}
			break;
		
		case 16 : //SIG_OUT_2
			break;
		
		default : break;
	}
}
